{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\OneDrive\\\\Desktop\\\\PROJECT\\\\vid call\\\\frontend\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { io } from 'socket.io-client';\nimport { Box, Paper, TextField, Button, Typography, List, ListItem, ListItemText, Divider, Avatar, ListItemAvatar, Tabs, Tab, Badge, IconButton } from '@mui/material';\nimport SendIcon from '@mui/icons-material/Send';\nimport ChatIcon from '@mui/icons-material/Chat';\nimport PersonIcon from '@mui/icons-material/Person';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const navigate = useNavigate();\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState('');\n  const [users, setUsers] = useState([]);\n  const [activeChat, setActiveChat] = useState(userId || 'all');\n  const [unreadCounts, setUnreadCounts] = useState({});\n  const socketRef = useRef();\n  const messagesEndRef = useRef();\n  useEffect(() => {\n    socketRef.current = io('http://localhost:5000');\n    socketRef.current.emit('join', {\n      username: `User-${Math.random().toString(36).substr(2, 9)}`\n    });\n    socketRef.current.on('chat-message', messageData => {\n      var _socketRef$current;\n      setMessages(prev => [...prev, messageData]);\n      // Update unread count if message is not from current chat\n      if (messageData.from !== ((_socketRef$current = socketRef.current) === null || _socketRef$current === void 0 ? void 0 : _socketRef$current.id) && (activeChat === 'all' || messageData.from !== activeChat)) {\n        setUnreadCounts(prev => ({\n          ...prev,\n          [messageData.from]: (prev[messageData.from] || 0) + 1\n        }));\n      }\n    });\n    socketRef.current.on('users-list', usersList => {\n      setUsers(usersList.filter(user => {\n        var _socketRef$current2;\n        return user.id !== ((_socketRef$current2 = socketRef.current) === null || _socketRef$current2 === void 0 ? void 0 : _socketRef$current2.id);\n      }));\n    });\n    return () => {\n      if (socketRef.current) {\n        socketRef.current.disconnect();\n      }\n    };\n  }, []);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n    // Reset unread count when switching chats\n    if (activeChat !== 'all') {\n      setUnreadCounts(prev => ({\n        ...prev,\n        [activeChat]: 0\n      }));\n    }\n  }, [messages, activeChat]);\n  const sendMessage = () => {\n    if (message.trim()) {\n      socketRef.current.emit('chat-message', {\n        to: activeChat,\n        message: message.trim()\n      });\n      setMessage('');\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      sendMessage();\n    }\n  };\n  const handleChatChange = userId => {\n    setActiveChat(userId);\n    navigate(`/chat/${userId}`);\n  };\n  const getUsername = userId => {\n    const user = users.find(u => u.id === userId);\n    return user ? user.username : 'Unknown User';\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      height: '100vh',\n      display: 'flex',\n      p: 2,\n      gap: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        width: 250,\n        p: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: [/*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          selected: activeChat === 'all',\n          onClick: () => handleChatChange('all'),\n          children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              children: /*#__PURE__*/_jsxDEV(ChatIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: \"Group Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), users.map(user => /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          selected: activeChat === user.id,\n          onClick: () => handleChatChange(user.id),\n          children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              children: /*#__PURE__*/_jsxDEV(PersonIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: user.username,\n            secondary: unreadCounts[user.id] ? `${unreadCounts[user.id]} unread` : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this), unreadCounts[user.id] > 0 && activeChat !== user.id && /*#__PURE__*/_jsxDEV(Badge, {\n            badgeContent: unreadCounts[user.id],\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 17\n          }, this)]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flex: 1,\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          flex: 1,\n          mb: 2,\n          p: 2,\n          overflow: 'auto'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: activeChat === 'all' ? 'Group Chat' : `Chat with ${getUsername(activeChat)}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          children: [messages.filter(msg => {\n            var _socketRef$current3;\n            return activeChat === 'all' || msg.from === activeChat || msg.from === ((_socketRef$current3 = socketRef.current) === null || _socketRef$current3 === void 0 ? void 0 : _socketRef$current3.id);\n          }).map((msg, index) => {\n            var _socketRef$current4, _socketRef$current5;\n            return /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    children: msg.from === ((_socketRef$current4 = socketRef.current) === null || _socketRef$current4 === void 0 ? void 0 : _socketRef$current4.id) ? /*#__PURE__*/_jsxDEV(PersonIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 163,\n                      columnNumber: 63\n                    }, this) : /*#__PURE__*/_jsxDEV(ChatIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 163,\n                      columnNumber: 80\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: msg.username,\n                  secondary: msg.message,\n                  primaryTypographyProps: {\n                    color: msg.from === ((_socketRef$current5 = socketRef.current) === null || _socketRef$current5 === void 0 ? void 0 : _socketRef$current5.id) ? 'primary' : 'textPrimary'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          gap: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          variant: \"outlined\",\n          placeholder: `Type a message to ${activeChat === 'all' ? 'everyone' : getUsername(activeChat)}...`,\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          onKeyPress: handleKeyPress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: sendMessage,\n          endIcon: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 22\n          }, this),\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"TO76tISksft+R5TLiFRdRPQVwT0=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useParams","useNavigate","io","Box","Paper","TextField","Button","Typography","List","ListItem","ListItemText","Divider","Avatar","ListItemAvatar","Tabs","Tab","Badge","IconButton","SendIcon","ChatIcon","PersonIcon","jsxDEV","_jsxDEV","Chat","_s","userId","navigate","messages","setMessages","message","setMessage","users","setUsers","activeChat","setActiveChat","unreadCounts","setUnreadCounts","socketRef","messagesEndRef","current","emit","username","Math","random","toString","substr","on","messageData","_socketRef$current","prev","from","id","usersList","filter","user","_socketRef$current2","disconnect","_messagesEndRef$curre","scrollIntoView","behavior","sendMessage","trim","to","handleKeyPress","e","key","handleChatChange","getUsername","find","u","sx","height","display","p","gap","children","width","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","button","selected","onClick","primary","map","secondary","badgeContent","color","flex","flexDirection","mb","overflow","msg","_socketRef$current3","index","_socketRef$current4","_socketRef$current5","Fragment","primaryTypographyProps","ref","fullWidth","placeholder","value","onChange","target","onKeyPress","endIcon","_c","$RefreshReg$"],"sources":["C:/Users/hp/OneDrive/Desktop/PROJECT/vid call/frontend/src/components/Chat.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { io } from 'socket.io-client';\r\nimport {\r\n  Box,\r\n  Paper,\r\n  TextField,\r\n  Button,\r\n  Typography,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Divider,\r\n  Avatar,\r\n  ListItemAvatar,\r\n  Tabs,\r\n  Tab,\r\n  Badge,\r\n  IconButton,\r\n} from '@mui/material';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport ChatIcon from '@mui/icons-material/Chat';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\n\r\nconst Chat = () => {\r\n  const { userId } = useParams();\r\n  const navigate = useNavigate();\r\n  const [messages, setMessages] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n  const [users, setUsers] = useState([]);\r\n  const [activeChat, setActiveChat] = useState(userId || 'all');\r\n  const [unreadCounts, setUnreadCounts] = useState({});\r\n  const socketRef = useRef();\r\n  const messagesEndRef = useRef();\r\n\r\n  useEffect(() => {\r\n    socketRef.current = io('http://localhost:5000');\r\n\r\n    socketRef.current.emit('join', {\r\n      username: `User-${Math.random().toString(36).substr(2, 9)}`,\r\n    });\r\n\r\n    socketRef.current.on('chat-message', (messageData) => {\r\n      setMessages(prev => [...prev, messageData]);\r\n      // Update unread count if message is not from current chat\r\n      if (messageData.from !== socketRef.current?.id && \r\n          (activeChat === 'all' || messageData.from !== activeChat)) {\r\n        setUnreadCounts(prev => ({\r\n          ...prev,\r\n          [messageData.from]: (prev[messageData.from] || 0) + 1\r\n        }));\r\n      }\r\n    });\r\n\r\n    socketRef.current.on('users-list', (usersList) => {\r\n      setUsers(usersList.filter(user => user.id !== socketRef.current?.id));\r\n    });\r\n\r\n    return () => {\r\n      if (socketRef.current) {\r\n        socketRef.current.disconnect();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n    // Reset unread count when switching chats\r\n    if (activeChat !== 'all') {\r\n      setUnreadCounts(prev => ({ ...prev, [activeChat]: 0 }));\r\n    }\r\n  }, [messages, activeChat]);\r\n\r\n  const sendMessage = () => {\r\n    if (message.trim()) {\r\n      socketRef.current.emit('chat-message', {\r\n        to: activeChat,\r\n        message: message.trim(),\r\n      });\r\n      setMessage('');\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      sendMessage();\r\n    }\r\n  };\r\n\r\n  const handleChatChange = (userId) => {\r\n    setActiveChat(userId);\r\n    navigate(`/chat/${userId}`);\r\n  };\r\n\r\n  const getUsername = (userId) => {\r\n    const user = users.find(u => u.id === userId);\r\n    return user ? user.username : 'Unknown User';\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ height: '100vh', display: 'flex', p: 2, gap: 2 }}>\r\n      {/* User List */}\r\n      <Paper sx={{ width: 250, p: 2 }}>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Users\r\n        </Typography>\r\n        <List>\r\n          <ListItem\r\n            button\r\n            selected={activeChat === 'all'}\r\n            onClick={() => handleChatChange('all')}\r\n          >\r\n            <ListItemAvatar>\r\n              <Avatar>\r\n                <ChatIcon />\r\n              </Avatar>\r\n            </ListItemAvatar>\r\n            <ListItemText primary=\"Group Chat\" />\r\n          </ListItem>\r\n          <Divider />\r\n          {users.map((user) => (\r\n            <ListItem\r\n              key={user.id}\r\n              button\r\n              selected={activeChat === user.id}\r\n              onClick={() => handleChatChange(user.id)}\r\n            >\r\n              <ListItemAvatar>\r\n                <Avatar>\r\n                  <PersonIcon />\r\n                </Avatar>\r\n              </ListItemAvatar>\r\n              <ListItemText \r\n                primary={user.username}\r\n                secondary={unreadCounts[user.id] ? `${unreadCounts[user.id]} unread` : ''}\r\n              />\r\n              {unreadCounts[user.id] > 0 && activeChat !== user.id && (\r\n                <Badge badgeContent={unreadCounts[user.id]} color=\"primary\" />\r\n              )}\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Paper>\r\n\r\n      {/* Chat Area */}\r\n      <Box sx={{ flex: 1, display: 'flex', flexDirection: 'column' }}>\r\n        <Paper sx={{ flex: 1, mb: 2, p: 2, overflow: 'auto' }}>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            {activeChat === 'all' ? 'Group Chat' : `Chat with ${getUsername(activeChat)}`}\r\n          </Typography>\r\n          <List>\r\n            {messages\r\n              .filter(msg => \r\n                activeChat === 'all' || \r\n                msg.from === activeChat || \r\n                msg.from === socketRef.current?.id\r\n              )\r\n              .map((msg, index) => (\r\n                <React.Fragment key={index}>\r\n                  <ListItem>\r\n                    <ListItemAvatar>\r\n                      <Avatar>\r\n                        {msg.from === socketRef.current?.id ? <PersonIcon /> : <ChatIcon />}\r\n                      </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText\r\n                      primary={msg.username}\r\n                      secondary={msg.message}\r\n                      primaryTypographyProps={{\r\n                        color: msg.from === socketRef.current?.id ? 'primary' : 'textPrimary',\r\n                      }}\r\n                    />\r\n                  </ListItem>\r\n                  <Divider />\r\n                </React.Fragment>\r\n              ))}\r\n            <div ref={messagesEndRef} />\r\n          </List>\r\n        </Paper>\r\n        <Box sx={{ display: 'flex', gap: 1 }}>\r\n          <TextField\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            placeholder={`Type a message to ${activeChat === 'all' ? 'everyone' : getUsername(activeChat)}...`}\r\n            value={message}\r\n            onChange={(e) => setMessage(e.target.value)}\r\n            onKeyPress={handleKeyPress}\r\n          />\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={sendMessage}\r\n            endIcon={<SendIcon />}\r\n          >\r\n            Send\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Chat; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}