{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\OneDrive\\\\Desktop\\\\PROJECT\\\\vid call\\\\frontend\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { io } from 'socket.io-client';\nimport { Box, Paper, TextField, Button, Typography, List, ListItem, ListItemText, Divider } from '@mui/material';\nimport SendIcon from '@mui/icons-material/Send';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState('');\n  const [users, setUsers] = useState([]);\n  const socketRef = useRef();\n  const messagesEndRef = useRef();\n  useEffect(() => {\n    socketRef.current = io('http://localhost:5000');\n    socketRef.current.emit('join', {\n      username: `User-${Math.random().toString(36).substr(2, 9)}`\n    });\n    socketRef.current.on('chat-message', messageData => {\n      setMessages(prev => [...prev, messageData]);\n    });\n    socketRef.current.on('users-list', usersList => {\n      setUsers(usersList);\n    });\n    return () => {\n      if (socketRef.current) {\n        socketRef.current.disconnect();\n      }\n    };\n  }, []);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  const sendMessage = () => {\n    if (message.trim()) {\n      socketRef.current.emit('chat-message', {\n        to: userId || 'all',\n        message: message.trim()\n      });\n      setMessage('');\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      sendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      height: '100vh',\n      display: 'flex',\n      flexDirection: 'column',\n      p: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        flex: 1,\n        mb: 2,\n        overflow: 'auto',\n        p: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(List, {\n        children: [messages.map((msg, index) => {\n          var _socketRef$current;\n          return /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(ListItem, {\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: msg.username,\n                secondary: msg.message,\n                primaryTypographyProps: {\n                  color: msg.from === ((_socketRef$current = socketRef.current) === null || _socketRef$current === void 0 ? void 0 : _socketRef$current.id) ? 'primary' : 'textPrimary'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        gap: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        variant: \"outlined\",\n        placeholder: \"Type a message...\",\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        onKeyPress: handleKeyPress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: sendMessage,\n        endIcon: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 20\n        }, this),\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"suTj1pzCUAObfvftQv8Go1q0pH8=\", false, function () {\n  return [useParams];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useParams","io","Box","Paper","TextField","Button","Typography","List","ListItem","ListItemText","Divider","SendIcon","jsxDEV","_jsxDEV","Chat","_s","userId","messages","setMessages","message","setMessage","users","setUsers","socketRef","messagesEndRef","current","emit","username","Math","random","toString","substr","on","messageData","prev","usersList","disconnect","_messagesEndRef$curre","scrollIntoView","behavior","sendMessage","trim","to","handleKeyPress","e","key","sx","height","display","flexDirection","p","children","flex","mb","overflow","map","msg","index","_socketRef$current","Fragment","primary","secondary","primaryTypographyProps","color","from","id","fileName","_jsxFileName","lineNumber","columnNumber","ref","gap","fullWidth","variant","placeholder","value","onChange","target","onKeyPress","onClick","endIcon","_c","$RefreshReg$"],"sources":["C:/Users/hp/OneDrive/Desktop/PROJECT/vid call/frontend/src/components/Chat.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { io } from 'socket.io-client';\r\nimport {\r\n  Box,\r\n  Paper,\r\n  TextField,\r\n  Button,\r\n  Typography,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Divider,\r\n} from '@mui/material';\r\nimport SendIcon from '@mui/icons-material/Send';\r\n\r\nconst Chat = () => {\r\n  const { userId } = useParams();\r\n  const [messages, setMessages] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n  const [users, setUsers] = useState([]);\r\n  const socketRef = useRef();\r\n  const messagesEndRef = useRef();\r\n\r\n  useEffect(() => {\r\n    socketRef.current = io('http://localhost:5000');\r\n\r\n    socketRef.current.emit('join', {\r\n      username: `User-${Math.random().toString(36).substr(2, 9)}`,\r\n    });\r\n\r\n    socketRef.current.on('chat-message', (messageData) => {\r\n      setMessages(prev => [...prev, messageData]);\r\n    });\r\n\r\n    socketRef.current.on('users-list', (usersList) => {\r\n      setUsers(usersList);\r\n    });\r\n\r\n    return () => {\r\n      if (socketRef.current) {\r\n        socketRef.current.disconnect();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [messages]);\r\n\r\n  const sendMessage = () => {\r\n    if (message.trim()) {\r\n      socketRef.current.emit('chat-message', {\r\n        to: userId || 'all',\r\n        message: message.trim(),\r\n      });\r\n      setMessage('');\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      sendMessage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ height: '100vh', display: 'flex', flexDirection: 'column', p: 2 }}>\r\n      <Paper sx={{ flex: 1, mb: 2, overflow: 'auto', p: 2 }}>\r\n        <List>\r\n          {messages.map((msg, index) => (\r\n            <React.Fragment key={index}>\r\n              <ListItem>\r\n                <ListItemText\r\n                  primary={msg.username}\r\n                  secondary={msg.message}\r\n                  primaryTypographyProps={{\r\n                    color: msg.from === socketRef.current?.id ? 'primary' : 'textPrimary',\r\n                  }}\r\n                />\r\n              </ListItem>\r\n              <Divider />\r\n            </React.Fragment>\r\n          ))}\r\n          <div ref={messagesEndRef} />\r\n        </List>\r\n      </Paper>\r\n      <Box sx={{ display: 'flex', gap: 1 }}>\r\n        <TextField\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          placeholder=\"Type a message...\"\r\n          value={message}\r\n          onChange={(e) => setMessage(e.target.value)}\r\n          onKeyPress={handleKeyPress}\r\n        />\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={sendMessage}\r\n          endIcon={<SendIcon />}\r\n        >\r\n          Send\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Chat; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}