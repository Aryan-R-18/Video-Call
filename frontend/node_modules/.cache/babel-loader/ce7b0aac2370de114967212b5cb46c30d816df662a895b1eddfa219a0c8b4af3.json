{"ast":null,"code":"import React,{useEffect,useRef,useState}from'react';import{useParams,useNavigate}from'react-router-dom';import{io}from'socket.io-client';import{Box,Paper,TextField,Button,Typography,List,ListItem,ListItemText,Divider,Avatar,ListItemAvatar,Tabs,Tab,Badge,IconButton}from'@mui/material';import SendIcon from'@mui/icons-material/Send';import ChatIcon from'@mui/icons-material/Chat';import PersonIcon from'@mui/icons-material/Person';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Chat=()=>{const{userId}=useParams();const navigate=useNavigate();const[messages,setMessages]=useState([]);const[message,setMessage]=useState('');const[users,setUsers]=useState([]);const[activeChat,setActiveChat]=useState(userId||'all');const[unreadCounts,setUnreadCounts]=useState({});const socketRef=useRef();const messagesEndRef=useRef();useEffect(()=>{socketRef.current=io('http://localhost:5000');socketRef.current.emit('join',{username:`User-${Math.random().toString(36).substr(2,9)}`});socketRef.current.on('chat-message',messageData=>{var _socketRef$current;setMessages(prev=>[...prev,messageData]);// Update unread count if message is not from current chat\nif(messageData.from!==((_socketRef$current=socketRef.current)===null||_socketRef$current===void 0?void 0:_socketRef$current.id)&&(activeChat==='all'||messageData.from!==activeChat)){setUnreadCounts(prev=>({...prev,[messageData.from]:(prev[messageData.from]||0)+1}));}});socketRef.current.on('users-list',usersList=>{setUsers(usersList.filter(user=>{var _socketRef$current2;return user.id!==((_socketRef$current2=socketRef.current)===null||_socketRef$current2===void 0?void 0:_socketRef$current2.id);}));});return()=>{if(socketRef.current){socketRef.current.disconnect();}};},[]);useEffect(()=>{var _messagesEndRef$curre;(_messagesEndRef$curre=messagesEndRef.current)===null||_messagesEndRef$curre===void 0?void 0:_messagesEndRef$curre.scrollIntoView({behavior:'smooth'});// Reset unread count when switching chats\nif(activeChat!=='all'){setUnreadCounts(prev=>({...prev,[activeChat]:0}));}},[messages,activeChat]);const sendMessage=()=>{if(message.trim()){socketRef.current.emit('chat-message',{to:activeChat,message:message.trim()});setMessage('');}};const handleKeyPress=e=>{if(e.key==='Enter'){sendMessage();}};const handleChatChange=userId=>{setActiveChat(userId);navigate(`/chat/${userId}`);};const getUsername=userId=>{const user=users.find(u=>u.id===userId);return user?user.username:'Unknown User';};return/*#__PURE__*/_jsxs(Box,{sx:{height:'100vh',display:'flex',p:2,gap:2},children:[/*#__PURE__*/_jsxs(Paper,{sx:{width:250,p:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Users\"}),/*#__PURE__*/_jsxs(List,{children:[/*#__PURE__*/_jsxs(ListItem,{button:true,selected:activeChat==='all',onClick:()=>handleChatChange('all'),children:[/*#__PURE__*/_jsx(ListItemAvatar,{children:/*#__PURE__*/_jsx(Avatar,{children:/*#__PURE__*/_jsx(ChatIcon,{})})}),/*#__PURE__*/_jsx(ListItemText,{primary:\"Group Chat\"})]}),/*#__PURE__*/_jsx(Divider,{}),users.map(user=>/*#__PURE__*/_jsxs(ListItem,{button:true,selected:activeChat===user.id,onClick:()=>handleChatChange(user.id),children:[/*#__PURE__*/_jsx(ListItemAvatar,{children:/*#__PURE__*/_jsx(Avatar,{children:/*#__PURE__*/_jsx(PersonIcon,{})})}),/*#__PURE__*/_jsx(ListItemText,{primary:user.username,secondary:unreadCounts[user.id]?`${unreadCounts[user.id]} unread`:''}),unreadCounts[user.id]>0&&activeChat!==user.id&&/*#__PURE__*/_jsx(Badge,{badgeContent:unreadCounts[user.id],color:\"primary\"})]},user.id))]})]}),/*#__PURE__*/_jsxs(Box,{sx:{flex:1,display:'flex',flexDirection:'column'},children:[/*#__PURE__*/_jsxs(Paper,{sx:{flex:1,mb:2,p:2,overflow:'auto'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:activeChat==='all'?'Group Chat':`Chat with ${getUsername(activeChat)}`}),/*#__PURE__*/_jsxs(List,{children:[messages.filter(msg=>{var _socketRef$current3;return activeChat==='all'||msg.from===activeChat||msg.from===((_socketRef$current3=socketRef.current)===null||_socketRef$current3===void 0?void 0:_socketRef$current3.id);}).map((msg,index)=>{var _socketRef$current4,_socketRef$current5;return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsxs(ListItem,{children:[/*#__PURE__*/_jsx(ListItemAvatar,{children:/*#__PURE__*/_jsx(Avatar,{children:msg.from===((_socketRef$current4=socketRef.current)===null||_socketRef$current4===void 0?void 0:_socketRef$current4.id)?/*#__PURE__*/_jsx(PersonIcon,{}):/*#__PURE__*/_jsx(ChatIcon,{})})}),/*#__PURE__*/_jsx(ListItemText,{primary:msg.username,secondary:msg.message,primaryTypographyProps:{color:msg.from===((_socketRef$current5=socketRef.current)===null||_socketRef$current5===void 0?void 0:_socketRef$current5.id)?'primary':'textPrimary'}})]}),/*#__PURE__*/_jsx(Divider,{})]},index);}),/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef})]})]}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',gap:1},children:[/*#__PURE__*/_jsx(TextField,{fullWidth:true,variant:\"outlined\",placeholder:`Type a message to ${activeChat==='all'?'everyone':getUsername(activeChat)}...`,value:message,onChange:e=>setMessage(e.target.value),onKeyPress:handleKeyPress}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",onClick:sendMessage,endIcon:/*#__PURE__*/_jsx(SendIcon,{}),children:\"Send\"})]})]})]});};export default Chat;","map":{"version":3,"names":["React","useEffect","useRef","useState","useParams","useNavigate","io","Box","Paper","TextField","Button","Typography","List","ListItem","ListItemText","Divider","Avatar","ListItemAvatar","Tabs","Tab","Badge","IconButton","SendIcon","ChatIcon","PersonIcon","jsx","_jsx","jsxs","_jsxs","Chat","userId","navigate","messages","setMessages","message","setMessage","users","setUsers","activeChat","setActiveChat","unreadCounts","setUnreadCounts","socketRef","messagesEndRef","current","emit","username","Math","random","toString","substr","on","messageData","_socketRef$current","prev","from","id","usersList","filter","user","_socketRef$current2","disconnect","_messagesEndRef$curre","scrollIntoView","behavior","sendMessage","trim","to","handleKeyPress","e","key","handleChatChange","getUsername","find","u","sx","height","display","p","gap","children","width","variant","gutterBottom","button","selected","onClick","primary","map","secondary","badgeContent","color","flex","flexDirection","mb","overflow","msg","_socketRef$current3","index","_socketRef$current4","_socketRef$current5","Fragment","primaryTypographyProps","ref","fullWidth","placeholder","value","onChange","target","onKeyPress","endIcon"],"sources":["C:/Users/hp/OneDrive/Desktop/PROJECT/vid call/frontend/src/components/Chat.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { io } from 'socket.io-client';\r\nimport {\r\n  Box,\r\n  Paper,\r\n  TextField,\r\n  Button,\r\n  Typography,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Divider,\r\n  Avatar,\r\n  ListItemAvatar,\r\n  Tabs,\r\n  Tab,\r\n  Badge,\r\n  IconButton,\r\n} from '@mui/material';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport ChatIcon from '@mui/icons-material/Chat';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\n\r\nconst Chat = () => {\r\n  const { userId } = useParams();\r\n  const navigate = useNavigate();\r\n  const [messages, setMessages] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n  const [users, setUsers] = useState([]);\r\n  const [activeChat, setActiveChat] = useState(userId || 'all');\r\n  const [unreadCounts, setUnreadCounts] = useState({});\r\n  const socketRef = useRef();\r\n  const messagesEndRef = useRef();\r\n\r\n  useEffect(() => {\r\n    socketRef.current = io('http://localhost:5000');\r\n\r\n    socketRef.current.emit('join', {\r\n      username: `User-${Math.random().toString(36).substr(2, 9)}`,\r\n    });\r\n\r\n    socketRef.current.on('chat-message', (messageData) => {\r\n      setMessages(prev => [...prev, messageData]);\r\n      // Update unread count if message is not from current chat\r\n      if (messageData.from !== socketRef.current?.id && \r\n          (activeChat === 'all' || messageData.from !== activeChat)) {\r\n        setUnreadCounts(prev => ({\r\n          ...prev,\r\n          [messageData.from]: (prev[messageData.from] || 0) + 1\r\n        }));\r\n      }\r\n    });\r\n\r\n    socketRef.current.on('users-list', (usersList) => {\r\n      setUsers(usersList.filter(user => user.id !== socketRef.current?.id));\r\n    });\r\n\r\n    return () => {\r\n      if (socketRef.current) {\r\n        socketRef.current.disconnect();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n    // Reset unread count when switching chats\r\n    if (activeChat !== 'all') {\r\n      setUnreadCounts(prev => ({ ...prev, [activeChat]: 0 }));\r\n    }\r\n  }, [messages, activeChat]);\r\n\r\n  const sendMessage = () => {\r\n    if (message.trim()) {\r\n      socketRef.current.emit('chat-message', {\r\n        to: activeChat,\r\n        message: message.trim(),\r\n      });\r\n      setMessage('');\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      sendMessage();\r\n    }\r\n  };\r\n\r\n  const handleChatChange = (userId) => {\r\n    setActiveChat(userId);\r\n    navigate(`/chat/${userId}`);\r\n  };\r\n\r\n  const getUsername = (userId) => {\r\n    const user = users.find(u => u.id === userId);\r\n    return user ? user.username : 'Unknown User';\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ height: '100vh', display: 'flex', p: 2, gap: 2 }}>\r\n      {/* User List */}\r\n      <Paper sx={{ width: 250, p: 2 }}>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Users\r\n        </Typography>\r\n        <List>\r\n          <ListItem\r\n            button\r\n            selected={activeChat === 'all'}\r\n            onClick={() => handleChatChange('all')}\r\n          >\r\n            <ListItemAvatar>\r\n              <Avatar>\r\n                <ChatIcon />\r\n              </Avatar>\r\n            </ListItemAvatar>\r\n            <ListItemText primary=\"Group Chat\" />\r\n          </ListItem>\r\n          <Divider />\r\n          {users.map((user) => (\r\n            <ListItem\r\n              key={user.id}\r\n              button\r\n              selected={activeChat === user.id}\r\n              onClick={() => handleChatChange(user.id)}\r\n            >\r\n              <ListItemAvatar>\r\n                <Avatar>\r\n                  <PersonIcon />\r\n                </Avatar>\r\n              </ListItemAvatar>\r\n              <ListItemText \r\n                primary={user.username}\r\n                secondary={unreadCounts[user.id] ? `${unreadCounts[user.id]} unread` : ''}\r\n              />\r\n              {unreadCounts[user.id] > 0 && activeChat !== user.id && (\r\n                <Badge badgeContent={unreadCounts[user.id]} color=\"primary\" />\r\n              )}\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Paper>\r\n\r\n      {/* Chat Area */}\r\n      <Box sx={{ flex: 1, display: 'flex', flexDirection: 'column' }}>\r\n        <Paper sx={{ flex: 1, mb: 2, p: 2, overflow: 'auto' }}>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            {activeChat === 'all' ? 'Group Chat' : `Chat with ${getUsername(activeChat)}`}\r\n          </Typography>\r\n          <List>\r\n            {messages\r\n              .filter(msg => \r\n                activeChat === 'all' || \r\n                msg.from === activeChat || \r\n                msg.from === socketRef.current?.id\r\n              )\r\n              .map((msg, index) => (\r\n                <React.Fragment key={index}>\r\n                  <ListItem>\r\n                    <ListItemAvatar>\r\n                      <Avatar>\r\n                        {msg.from === socketRef.current?.id ? <PersonIcon /> : <ChatIcon />}\r\n                      </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText\r\n                      primary={msg.username}\r\n                      secondary={msg.message}\r\n                      primaryTypographyProps={{\r\n                        color: msg.from === socketRef.current?.id ? 'primary' : 'textPrimary',\r\n                      }}\r\n                    />\r\n                  </ListItem>\r\n                  <Divider />\r\n                </React.Fragment>\r\n              ))}\r\n            <div ref={messagesEndRef} />\r\n          </List>\r\n        </Paper>\r\n        <Box sx={{ display: 'flex', gap: 1 }}>\r\n          <TextField\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            placeholder={`Type a message to ${activeChat === 'all' ? 'everyone' : getUsername(activeChat)}...`}\r\n            value={message}\r\n            onChange={(e) => setMessage(e.target.value)}\r\n            onKeyPress={handleKeyPress}\r\n          />\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={sendMessage}\r\n            endIcon={<SendIcon />}\r\n          >\r\n            Send\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Chat; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}